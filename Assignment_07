
import java.sql.*;
import java.util.*;

public class OnlineBookshop

{
    static final String URL = "jdbc:postgresql://localhost:5432/bookshop";
    static final String USER = "postgresql";
    static final String PASS = "arundati@44";

    static Scanner sc = new Scanner(System.in);

    public static void main(String[] args) throws Exception 
{
        Class.forName("org.postgresql.Driver");
        Connection con = DriverManager.getConnection(URL, USER, PASS);

        while (true) 
{
            System.out.println("\n--- Online Bookshop Menu --");
            System.out.println("1. Add Author");
            System.out.println("2. Add Category");
            System.out.println("3. Add Book");
            System.out.println("4. Add User");
            System.out.println("5. Place Order");
            System.out.println("6. Exit");
            System.out.print("Enter choice: ");
            int ch = sc.nextInt();

            switch (ch)
{
                case 1:
                    addAuthor(con);
                    break;

                case 2:
                    addCategory(con);
                    break;

                case 3:
                    addBook(con);
                    break;

                case 4:
                    addUser(con);
                    break;

                case 5:
                    placeOrder(con);
                    break;

                case 6:
                    con.close();
                    System.out.println("Goodbye!");
                    System.exit(0);
                    break;

                default:
                    System.out.println("invalid choice.");
            }
        }
    }

    static void addAuthor(Connection con) throws SQLException
{
        sc.nextLine(); 
        System.out.print("Enter author name: ");
        String name = sc.nextLine();

        System.out.print("Enter author address: ");
        String address = sc.nextLine();


        PreparedStatement ps = con.prepareStatement("insert into authors(name, address) VALUES(?, ?)");
        ps.setString(1, name);
        ps.setString(2, address);
        ps.executeUpdate();
        System.out.println(" Author added.");
    }

    static void addCategory(Connection con) throws SQLException
{
        sc.nextLine(); 
        System.out.print("Enter category name: ");
        String name = sc.nextLine();

        PreparedStatement ps = con.prepareStatement("insert into categories(name) VALUES(?)");
        ps.setString(1, name);
        ps.executeUpdate();
        System.out.println(" Category added.");
    }

    static void addBook(Connection con) throws SQLException
{
        sc.nextLine(); 
        System.out.print("Enter book title: ");
        String title = sc.nextLine();
        System.out.print("Enter author ID: ");
        int authorId = sc.nextInt();
        System.out.print("Enter category ID: ");
        int categoryId = sc.nextInt();
        System.out.print("Enter price: ");
        double price = sc.nextDouble();

        PreparedStatement ps = con.prepareStatement("INSERT INTO books(title, author_id, category_id, price) VALUES(?, ?, ?, ?)");
        ps.setString(1, title);
        ps.setInt(2, authorId);
        ps.setInt(3, categoryId);
        ps.setDouble(4, price);
        ps.executeUpdate();
        System.out.println(" Book added.");
    }

    static void addUser(Connection con) throws SQLException
{
        sc.nextLine(); 
        System.out.print("Enter username: ");
        String username = sc.nextLine();
        System.out.print("Enter password: ");
        String password = sc.nextLine();
        System.out.print("Enter email: ");
        String email = sc.nextLine();

        PreparedStatement ps = con.prepareStatement("insert into  users(username, password, email) VALUES(?, ?, ?)");
        ps.setString(1, username);
        ps.setString(2, password);
        ps.setString(3, email);
        ps.executeUpdate();
        System.out.println(" User added.");
    }

    static void placeOrder(Connection con) throws SQLException 
{
        System.out.print("Enter user ID: ");
        int userId = sc.nextInt();

        PreparedStatement psOrder = con.prepareStatement("insert into orders(user_id) VALUES(?)");
        psOrder.setInt(1, userId);
        psOrder.executeUpdate();

        ResultSet rs = psOrder.getGeneratedKeys();
        int orderId = 0;
        if (rs.next()) {
            orderId = rs.getInt(1);
        }

        System.out.println("add books to the order:");
        while (true) {
            System.out.print("Enter book ID to add (0 to finish): ");
            int bookId = sc.nextInt();
            if (bookId == 0) break;

            System.out.print("Enter quantity: ");
            int qty = sc.nextInt();

            PreparedStatement psItem = con.prepareStatement("inert into order_items(order_id, book_id, quantity) VALUES(?, ?, ?)");
            psItem.setInt(1, orderId);
            psItem.setInt(2, bookId);
            psItem.setInt(3, qty);
            psItem.executeUpdate();
            System.out.println(" Item added to order.");
        }

        System.out.println(" Order placed successfully!");
    }
}
